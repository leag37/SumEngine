//*************************************************************************************************
// Title: SumEntity.cpp
// Author: Gael Huber
// Description: Sum Engine entity. Contains basic components for any object in the system.
//*************************************************************************************************
#include "SumEntity.h"

//*************************************************************************************************
// Constructor
//*************************************************************************************************
Entity::Entity()
	: _name(""), _renderable(0)
{ }

//*************************************************************************************************
// Constructor from name
//*************************************************************************************************
Entity::Entity(const String& name, const String& assetName)
	: _name(name)
{ 
	_renderable = new Renderable(name, assetName);
}

//*************************************************************************************************
// Destructor
//*************************************************************************************************
Entity::~Entity()
{ }

//*************************************************************************************************
// Name
//*************************************************************************************************
const String& Entity::name()
{
	return _name;
}

//*************************************************************************************************
// Renderable
//*************************************************************************************************
Renderable* Entity::renderable()
{
	return _renderable;
}

//*************************************************************************************************
// Set the position
//*************************************************************************************************
void Entity::setPosition(SFLOAT x, SFLOAT y, SFLOAT z)
{
	_renderable->setPosition(x, y, z);
}
