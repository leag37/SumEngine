//*************************************************************************************************
// Title: SumVector3.inl
// Author: Gael Huber
// Description: Vector3 mathematics
//*************************************************************************************************

//*************************************************************************************************
// Length
//*************************************************************************************************
SUMINLINE Vector Vec3Length(const Vector v)
{
	// Get squared length
	Vector vSqrLen = _mm_mul_ps(v, v);

	// Splat y, z
	Vector vY = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleYYYY);
	Vector vZ = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleZZZZ);

	// Add values
	vSqrLen = _mm_add_ps(vSqrLen, vY);
	vSqrLen = _mm_add_ps(vSqrLen, vZ);
	
	// Splat x to yield final result
	vSqrLen = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleXXXX);

	// Square length
	vSqrLen = _mm_sqrt_ps(vSqrLen);

	return vSqrLen;
}

//*************************************************************************************************
// Squared length
//*************************************************************************************************
SUMINLINE Vector Vec3LengthSqr(const Vector v)
{
		// Get squared length
	Vector vSqrLen = _mm_mul_ps(v, v);

	// Splat y, z
	Vector vY = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleYYYY);
	Vector vZ = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleZZZZ);

	// Add values
	vSqrLen = _mm_add_ps(vSqrLen, vY);
	vSqrLen = _mm_add_ps(vSqrLen, vZ);
	
	// Splat x to yield final result
	vSqrLen = _mm_shuffle_ps(vSqrLen, vSqrLen, gVShuffleXXXX);

	return vSqrLen;
}

//*************************************************************************************************
// Dot
//*************************************************************************************************
SUMINLINE Vector Vec3Dot(const Vector v1, const Vector v2)
{

}

//*************************************************************************************************
// Cross
//*************************************************************************************************
Vector Vec3Cross(const Vector v1, const Vector v2);

//*************************************************************************************************
//
//*************************************************************************************************

//*************************************************************************************************
//
//*************************************************************************************************

//*************************************************************************************************
//
//*************************************************************************************************

//*************************************************************************************************
//
//*************************************************************************************************
